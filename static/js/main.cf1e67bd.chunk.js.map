{"version":3,"sources":["settings.ts","ConnectForm.tsx","Controller.tsx","Client.ts","style.ts","App.tsx","theme.ts","index.tsx"],"names":["DEVICE_ID_KEY","ACCESS_TOKEN_KEY","ConnectForm","onSubmit","React","useState","localStorage","getItem","deviceId","setDeviceId","accessToken","setAccessToken","handleSubmit","Grid","container","spacing","direction","component","e","preventDefault","item","lg","TextField","label","placeholder","required","fullWidth","value","onChange","target","Button","type","color","variant","Controller","onDisconnect","setValue","Slider","min","max","onChangeCommitted","_e","newValue","onClick","Client","onOpen","onClose","socket","freq","pulse","this","close","WebSocket","path","onmessage","ev","redirect","JSON","parse","data","ws","console","info","onopen","setup","onclose","window","onunload","send","stringify","io0","pwm0","io","pwm1","updateDisplay","display","clear","text","duty","setPulse","useStyles","makeStyles","_theme","root","flexGrow","height","App","classes","client","setClient","isConnected","setConnected","className","alignItems","justify","xs","sm","v","setDuty","disconnect","CircularProgress","setItem","removeItem","settings","connect","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.cf1e67bd.chunk.js","sourcesContent":["const DEVICE_ID_KEY = 'deviceId';\nconst ACCESS_TOKEN_KEY = 'accessToken';\n\nexport const getDeviceId = () => localStorage.getItem(DEVICE_ID_KEY);\nexport const setDeviceId = (value: string | null) =>\n  value\n    ? localStorage.setItem(DEVICE_ID_KEY, value)\n    : localStorage.removeItem(DEVICE_ID_KEY);\n\nexport const getAccessToken = () =>\n  localStorage.getItem(ACCESS_TOKEN_KEY);\nexport const setAccessToken = (value: string | null) =>\n  value\n    ? localStorage.setItem(ACCESS_TOKEN_KEY, value)\n    : localStorage.removeItem(ACCESS_TOKEN_KEY);\n","import { Button, Grid, TextField } from '@material-ui/core';\nimport React from 'react';\nimport { getAccessToken, getDeviceId } from './settings';\n\nexport interface ConnectFormPayload {\n  deviceId: string;\n  accessToken: string | null;\n}\n\ninterface Props {\n  onSubmit: (value: ConnectFormPayload) => void;\n}\nexport const ConnectForm = ({ onSubmit }: Props) => {\n  const [deviceId, setDeviceId] = React.useState(getDeviceId());\n  const [accessToken, setAccessToken] = React.useState(\n    getAccessToken(),\n  );\n  const handleSubmit = () => {\n    deviceId &&\n      onSubmit({\n        deviceId,\n        accessToken,\n      });\n  };\n  return (\n    <Grid\n      container\n      spacing={2}\n      direction=\"column\"\n      component=\"form\"\n      onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        handleSubmit();\n      }}\n    >\n      <Grid item lg>\n        <TextField\n          label=\"Device ID\"\n          placeholder=\"XXXX-XXXX\"\n          required\n          fullWidth\n          value={deviceId || ''}\n          onChange={(e) => setDeviceId(e.target.value)}\n        />\n      </Grid>\n      <Grid item lg>\n        <TextField\n          label=\"Access Token\"\n          placeholder=\"\"\n          fullWidth\n          value={accessToken || ''}\n          onChange={(e) => setAccessToken(e.target.value)}\n        />\n      </Grid>\n      <Grid item lg>\n        <Button\n          type=\"submit\"\n          fullWidth\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Connect\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { Grid, Button, Slider } from '@material-ui/core';\n\ninterface Props {\n  onChange: (value: number) => void;\n  onDisconnect: () => void;\n}\n\nexport const Controller = ({ onChange, onDisconnect }: Props) => {\n  const [value, setValue] = React.useState(0);\n  const stop = () => {\n    setValue(0);\n    onChange(0);\n  };\n  return (\n    <Grid container spacing={2} direction=\"column\">\n      <Grid item lg>\n        <Slider\n          value={value}\n          min={-100}\n          max={100}\n          onChangeCommitted={() => onChange(value)}\n          onChange={(_e, newValue) => setValue(newValue as number)}\n        />\n      </Grid>\n      <Grid item lg>\n        <Button onClick={onDisconnect}>Disconnect</Button>\n        <Button onClick={stop}>Stop</Button>\n      </Grid>\n    </Grid>\n  );\n};\n","export class Client {\n  deviceId: string;\n  accessToken: string | null;\n  onOpen?: () => void;\n  onClose?: () => void;\n  private socket: WebSocket | null = null;\n  private freq: number = 255;\n  private pulse: number = 0;\n  constructor(deviceId: string, accessToken: string | null = null) {\n    this.deviceId = deviceId;\n    this.accessToken = accessToken;\n  }\n  get path(): string {\n    return `obniz/${this.deviceId}/ws/1${\n      this.accessToken ? `?access_token=${this.accessToken}` : ''\n    }`;\n  }\n  disconnect() {\n    this.socket?.close();\n  }\n  connect() {\n    this.socket = new WebSocket(`wss://obniz.com/${this.path}`);\n    this.socket.onmessage = (ev) => {\n      const data = JSON.parse(ev.data);\n      const { redirect } = data[0].ws;\n      console.info(redirect);\n      this.socket?.close();\n      this.socket = new WebSocket(`${redirect}/${this.path}`);\n      this.socket.onopen = () => {\n        this.onOpen && this.onOpen();\n        this.setup();\n      };\n      this.socket.onclose = () => {\n        this.onClose && this.onClose();\n        this.socket = null;\n      };\n      window.onunload = () => {\n        this.socket?.close();\n      };\n    };\n  }\n  send(...data: any) {\n    if (!this.socket) return;\n    this.socket.send(JSON.stringify(data));\n  }\n  setup() {\n    this.send({\n      io0: false,\n      pwm0: {\n        io: 4,\n        freq: this.freq,\n      },\n      pwm1: {\n        io: 5,\n        freq: this.freq,\n      },\n    });\n    this.updateDisplay();\n  }\n  updateDisplay() {\n    this.send({\n      display: {\n        clear: true,\n        text: `Freq: ${this.freq}\\nPluse: ${this.pulse}`,\n      },\n    });\n  }\n  setDuty(duty: number) {\n    this.setPulse((1 / this.freq) * 1000 * duty * 0.01);\n  }\n  setPulse(pulse: number) {\n    this.pulse = pulse;\n    if (pulse > 0) {\n      this.send({\n        pwm0: { pulse },\n      });\n    } else if (pulse < 0) {\n      this.send({\n        pwm1: { pulse: pulse * -1 },\n      });\n    } else {\n      this.send({\n        pwm0: { pulse: 0 },\n        pwm1: { pulse: 0 },\n      });\n    }\n    this.updateDisplay();\n  }\n  setFreq(freq: number) {\n    this.freq = freq;\n    this.send({\n      pwm0: { freq },\n    });\n    this.updateDisplay();\n  }\n}\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((_theme) => ({\n  root: {\n    flexGrow: 1,\n    height: '100%',\n  },\n}));\n","import React from 'react';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport { ConnectForm, ConnectFormPayload } from './ConnectForm';\nimport { Controller } from './Controller';\nimport * as settings from './settings';\nimport { Client } from './Client';\nimport { useStyles } from './style';\n\nexport const App = () => {\n  const classes = useStyles();\n  const [client, setClient] = React.useState<Client | null>(null);\n  const [isConnected, setConnected] = React.useState(false);\n  const handleSubmit = ({\n    accessToken,\n    deviceId,\n  }: ConnectFormPayload) => {\n    settings.setDeviceId(deviceId);\n    settings.setAccessToken(accessToken);\n    const client = new Client(deviceId, accessToken);\n    client.onOpen = () => {\n      setConnected(true);\n    };\n    client.onClose = () => {\n      setClient(null);\n      setConnected(false);\n    };\n    client.connect();\n    setClient(client);\n  };\n  return (\n    <Grid\n      className={classes.root}\n      direction=\"row\"\n      alignItems=\"center\"\n      justify=\"center\"\n      container\n    >\n      {client ? (\n        isConnected ? (\n          <Grid item xs={11} sm={8}>\n            <Controller\n              onChange={(v) => client?.setDuty(v)}\n              onDisconnect={() => client.disconnect()}\n            />\n          </Grid>\n        ) : (\n          <CircularProgress />\n        )\n      ) : (\n        <Grid item xs={11} sm={8}>\n          <ConnectForm onSubmit={handleSubmit} />\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { App } from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}